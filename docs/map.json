[{"id": "encode", "parent": "#", "text": "encode", "type": "default"}, {"id": "encode/bash", "parent": "encode", "text": "bash", "type": "default"}, {"id": "encode/python", "parent": "encode", "text": "python", "type": "default"}, {"id": "format", "parent": "#", "text": "format", "type": "default"}, {"id": "format/bash", "parent": "format", "text": "bash", "type": "default"}, {"id": "format/python", "parent": "format", "text": "python", "type": "default"}, {"id": "lets/encode/bash/base64_", "parent": "encode/bash", "text": "base64", "type": "module", "help": "usage: encode/bash/base64 [-h] [-i] [-g] [-o OUTPUT] [-v] [-s SHELL]\n\n    Base64 encode a bash script into a bash command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n  -s SHELL, --shell SHELL\n                        use a specific shell (/bin/bash)\n"}, {"id": "lets/encode/bash/compress_", "parent": "encode/bash", "text": "compress", "type": "module", "help": "usage: encode/bash/compress [-h] [-i] [-g] [-o OUTPUT] [-v] [-s SHELL]\n\n    Compress and Base64 encode a bash script into a bash command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n  -s SHELL, --shell SHELL\n                        use a specific shell (/bin/bash)\n"}, {"id": "lets/encode/python/base64_", "parent": "encode/python", "text": "base64", "type": "module", "help": "usage: encode/python/base64 [-h] [-i] [-g] [-o OUTPUT] [-v]\n\n    Base64 encode a python script into a python command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n"}, {"id": "lets/encode/python/compress_", "parent": "encode/python", "text": "compress", "type": "module", "help": "usage: encode/python/compress [-h] [-i] [-g] [-o OUTPUT] [-v]\n\n    Compress and Base64 encode a python script into a python command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n"}, {"id": "lets/encode/python/rc4_", "parent": "encode/python", "text": "rc4", "type": "module", "help": "usage: encode/python/rc4 [-h] [-i] [-g] [-o OUTPUT] [-v]\n\n    Compress, RC4 encrypt and Base64 encode a python script into a python command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n"}, {"id": "lets/format/bash/python_", "parent": "format/bash", "text": "python", "type": "module", "help": "usage: format/bash/python [-h] [-i] [-g] [-o OUTPUT] [-v] [-s SHELL]\n\n    Base64 encode a bash command and wrap it in a python command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n  -s SHELL, --shell SHELL\n                        use a specific shell (/bin/bash)\n"}, {"id": "lets/format/python/bash_", "parent": "format/python", "text": "bash", "type": "module", "help": "usage: format/python/bash [-h] [-i] [-g] [-o OUTPUT] [-v] [-s SHELL] [-c]\n\n    Base64 encode a python command and wrap it in a bash command.\n    \n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --iterate         iterate over input\n  -g, --generate        generate each output\n  -o OUTPUT, --output OUTPUT\n                        output to file\n  -v, --verbose         print debug info\n  -s SHELL, --shell SHELL\n                        use a specific shell (python)\n  -c, --compress        use compression\n"}]
