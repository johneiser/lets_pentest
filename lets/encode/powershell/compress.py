from lets.__module__ import Module, Mount, Container
import base64, gzip


class Compress(Module):
    """
    Compress and base64 encode a PowerShell script and wrap it in a decompression stub.
    """
    
    def handle(self, input, url=None):
        assert input is not None, "Must provide powershell as input"

        for data in input:
            compressed = gzip.compress(data, compresslevel=9)
            encoded = base64.b64encode(compressed).decode()

            cmd  =  "&([ScriptBlock]::Create("
            cmd +=      "(New-Object System.IO.StreamReader("
            cmd +=          "New-Object System.IO.Compression.GzipStream("
            cmd +=              "(New-Object System.IO.MemoryStream(,"
            cmd +=                  "[System.Convert]::FromBase64String("
            cmd +=                      "'%s'" % encoded
            cmd +=                  ")"
            cmd +=              ")),[System.IO.Compression.CompressionMode]::Decompress"
            cmd +=          ")"
            cmd +=      ")).ReadToEnd()"
            cmd +=  "))"

            yield cmd.encode()
