from lets.__module__ import Module, Container, TestCase
import base64


class Python(Module):
    """
    Base64 encode a bash command and wrap it in a python command.
    """

    @classmethod
    def add_arguments(self, parser):
        parser.add_argument("-s", "--shell", type=str,
            help="use a specific shell (%(default)s)", default="/bin/bash")

    def handle(self, input, shell="/bin/bash"):
        for data in input:

            self.log.debug("Base64 encoding %i bytes", len(data))
            encoded = base64.b64encode(data)

            self.log.debug("Wrapping %i bytes", len(encoded))
            cmd  = "import base64,subprocess as s;"
            cmd += "s.Popen(['"
            cmd += shell
            cmd += "','-c',base64.b64decode('"
            cmd += encoded.decode()
            cmd += "')]).communicate()"

            yield cmd.encode()


class PythonTests(TestCase):
    images = ["python:2", "python:3"]

    def test_python_2(self):
        import string
        test = string.ascii_letters + string.digits
        statement = "echo '%s'" % test
        result = self.module(statement.encode())
        cmd = result.decode()

        with Container.run("python:2",
            network_disabled=True,
            entrypoint=["python", "-c"],
            command=[cmd]) as container:
            
            out = container.output()

        self.assertEqual(
            out.strip(),
            test.encode(),
            "Bash execution produced inaccurate results")

    def test_python_3(self):
        import string
        test = string.ascii_letters + string.digits
        statement = "echo '%s'" % test
        result = self.module(statement.encode())
        cmd = result.decode()

        with Container.run("python:3",
            network_disabled=True,
            entrypoint=["python", "-c"],
            command=[cmd]) as container:
            
            out = container.output()

        self.assertEqual(
            out.strip(),
            test.encode(),
            "Bash execution produced inaccurate results")

